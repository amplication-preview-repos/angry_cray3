/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  AutomatedPatternIdentification as PrismaAutomatedPatternIdentification,
} from "@prisma/client";

export class AutomatedPatternIdentificationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AutomatedPatternIdentificationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.automatedPatternIdentification.count(args);
  }

  async automatedPatternIdentifications(
    args: Prisma.AutomatedPatternIdentificationFindManyArgs
  ): Promise<PrismaAutomatedPatternIdentification[]> {
    return this.prisma.automatedPatternIdentification.findMany(args);
  }
  async automatedPatternIdentification(
    args: Prisma.AutomatedPatternIdentificationFindUniqueArgs
  ): Promise<PrismaAutomatedPatternIdentification | null> {
    return this.prisma.automatedPatternIdentification.findUnique(args);
  }
  async createAutomatedPatternIdentification(
    args: Prisma.AutomatedPatternIdentificationCreateArgs
  ): Promise<PrismaAutomatedPatternIdentification> {
    return this.prisma.automatedPatternIdentification.create(args);
  }
  async updateAutomatedPatternIdentification(
    args: Prisma.AutomatedPatternIdentificationUpdateArgs
  ): Promise<PrismaAutomatedPatternIdentification> {
    return this.prisma.automatedPatternIdentification.update(args);
  }
  async deleteAutomatedPatternIdentification(
    args: Prisma.AutomatedPatternIdentificationDeleteArgs
  ): Promise<PrismaAutomatedPatternIdentification> {
    return this.prisma.automatedPatternIdentification.delete(args);
  }
}
